/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void depth(TreeNode*root,int l,int &d){
        if(!root)return;
        d=d>l?d:l;
        depth(root->left,l+1,d);
        depth(root->right,l+1,d);
    }
    void sum(TreeNode*root,int l,int d,int &s){
        if(!root)return;
        if(l==d)s+=root->val;
        sum(root->left,l+1,d,s);
        sum(root->right,l+1,d,s);
    }
    int deepestLeavesSum(TreeNode* root) {
        int l=0,d=0,s=0;
        depth(root,l,d);
        sum(root,l,d,s);
        return s;
    }
};
