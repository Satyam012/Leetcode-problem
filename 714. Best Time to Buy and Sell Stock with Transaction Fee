class Solution {
public:
    int help(int i,int status,vector<int>&p,int fee,vector<vector<int>>&dp){
        if(i>=p.size())return 0;
        if(dp[i][status]!=-1)return dp[i][status];
        if(status==0){
            int op1=-p[i]+help(i+1,1,p,fee,dp);
            int op2=help(i+1,0,p,fee,dp);
            return dp[i][status]=max(op1,op2);
        }
        else{
            int op1=p[i]-fee+help(i+1,0,p,fee,dp);
            int op2=help(i+1,1,p,fee,dp);
            return dp[i][status]=max(op1,op2);
        }
    }
    int maxProfit(vector<int>& prices, int fee) {
        vector<vector<int>>dp(prices.size(),vector<int>(2,-1));
        return help(0,0,prices,fee,dp);
    }
};
