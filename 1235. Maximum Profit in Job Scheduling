class Solution {
public:
    
    int jobScheduling(vector<int>& startTime, vector<int>& endTime, vector<int>& profit) {
        int n=profit.size();
        vector<vector<int>>v;
        for(int i=0;i<n;i++){
            v.push_back({startTime[i],endTime[i],profit[i]});
        }
        sort(v.begin(),v.end(),[](vector<int>&v1,vector<int>&v2){
            return v1[1]<v2[1];
        });
        vector<int>dp(n);
        dp[0]=v[0][2];
        for(int i=1;i<n;i++){
            int inc=v[i][2];
            int lo=0,hi=i-1,last=-1;
            while(lo<=hi){
                int mid=(lo+hi)/2;
                if(v[mid][1]<=v[i][0]){
                    last=mid;
                    lo=mid+1;
                }
                else hi=mid-1;
            }
            if(last!=-1)inc+=dp[last];
            int exc=dp[i-1];
            dp[i]=max(inc,exc);
        }
        return dp[n-1];
    }
};
