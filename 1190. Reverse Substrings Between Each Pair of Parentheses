Space- O(n) time -O(n)

class Solution {
public:
    string reverseParentheses(string s) {
        stack<int> st;
        string res;
        for (int i = 0; i < s.size(); i ++) {
            if (s[i] == '(') {
                st.push(i);    
            } else if (s[i] == ')') {
                int top = st.top();
                st.pop();
                reverse(s.begin() + top + 1, s.begin() + i);
            }
        }
        for (auto it: s) {
            if (it != '(' && it != ')') {
                res.push_back(it);
            }
        }
        return res;
    }
};

Space- O(1) time -O(n)

string reverseP(string s, int& idx) {
        if (idx >= s.length()) return "";
        string result = "";
        while (idx < s.length()) {
            if (s[idx] == '(') {
                result += reverseP(s, ++idx);
            } else if (s[idx] == ')') {
                 reverse(result.begin(), result.end());
                return result;
            } else 
                result += s[idx];
            idx++;
        }
        return result;
    }
    
string reverseParentheses(string s) {
    int idx = 0;
    return reverseP(s, idx);
}
    
