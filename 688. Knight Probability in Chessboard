class Solution {
public:
    vector<pair<int,int>>v={{-2,-1},{-1,-2},{1,-2},{2,-1},{2,1},{1,2},{-1,2},{-2,1}};
    double sol(vector<vector<vector<double>>>&dp, int N, int k, int r, int c){
        if(r<0||c<0||r>=N||c>=N)return 0;
        if(dp[r][c][k]!=0)return dp[r][c][k];
        if(k==0)return 1;
        for(int i=0;i<8;i++){
            dp[r][c][k]+=0.125*sol(dp,N,k-1,r+v[i].first,c+v[i].second);
        }
        return dp[r][c][k];
    }
    double knightProbability(int N, int K, int r, int c) {
        vector<vector<vector<double>>> dp(N, vector<vector<double>>(N, vector<double>(K+1,0)));
        return sol(dp,N,K,r,c);
    }
};
