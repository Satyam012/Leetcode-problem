Solution{
    long long dp[10][26];
    int keypad[4][3]={{1,2,3},{4,5,6},{7,8,9},{-1,0,-1}};
	public:
	long long dfs(int i,int j,int n){
	    if(i<0||j<0||i==4||j==3||keypad[i][j]==-1)return 0;
	    if(n==1)return 1;
	    if(dp[keypad[i][j]][n]!=-1)return dp[keypad[i][j]][n];
	    return dp[keypad[i][j]][n]=dfs(i,j,n-1)+dfs(i+1,j,n-1)+dfs(i-1,j,n-1)+dfs(i,j+1,n-1)+dfs(i,j-1,n-1);
	}
	
	long long getCount(int N)
	{
	    memset(dp,-1,sizeof dp);
	   
	    long long  ans=0;
		for(int i=0;i<4;i++){
		    for(int j=0;j<3;j++){
		        if(keypad[i][j]!='#'){
		            ans+=dfs(i,j,N);
		        }
		    }
		}
		return ans;
	}
};
