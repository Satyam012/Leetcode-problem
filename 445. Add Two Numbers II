/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverse(ListNode *head)
    {
        ListNode *curr = head,*next = NULL,*prev = NULL;

        while(curr){
            next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
        }
        head = prev;
        return head;
    }

    ListNode* addTwoLists1(ListNode* l1, ListNode* l2){
        if (l1 == NULL) return l2;
        if (l2 == NULL) return l1;
        int a = l1->val + l2->val;
        ListNode *p = new ListNode(a % 10);
        p->next = addTwoLists1(l1->next,l2->next);
        if (a >= 10) p->next = addTwoLists1(p->next, new ListNode(1));
        return p;
    }
    
    ListNode* addTwoNumbers(ListNode* first, ListNode* second) {
        ListNode *first1=reverse(first);
        ListNode *second1=reverse(second);
        ListNode *res=addTwoLists1(first1,second1);
        ListNode *res2=reverse(res);
        return res2;
    }
};
