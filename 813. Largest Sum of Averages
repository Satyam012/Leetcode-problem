class Solution {
public:
    double largestSumOfAverages(vector<int>& A, int K) {
        int n=A.size();
        vector<int>sum(n);
        for(int i=0;i<n;i++)sum[i]=A[i]+(i>0?sum[i-1]:0);
        vector<vector<double>>dp(n,vector<double>(K+1,0));
        return sol(A,K,0,n,sum,dp);
    }
    double sol(vector<int>&A,int k,int l,int h,vector<int>&sum,vector<vector<double>>&dp){
        if(dp[l][k]!=0)return dp[l][k];
        if(k==1){
            dp[l][k]=(double)(sum[h-1]-sum[l]+A[l])/(h-l);
            return dp[l][k];
        }
        for(int i=l;i+k<=h;i++){
            dp[l][k]=max(dp[l][k], (double)(sum[i]-sum[l]+A[l])/(i-l+1)+sol(A,k-1,i+1,h,sum,dp));
        }
        return dp[l][k];
    }
};
