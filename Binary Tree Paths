/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<string>v;
    vector<string> binaryTreePaths(TreeNode* root,string s="") {
        if(!root)return {};
        if(!root->left&&!root->right){
            v.push_back(s+to_string(root->val));
        }
        else{
            binaryTreePaths(root->left,s+to_string(root->val)+"->");
            binaryTreePaths(root->right,s+to_string(root->val)+"->");
        }
        return v;
    }
};
