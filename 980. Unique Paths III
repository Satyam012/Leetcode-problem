class Solution {
public:
    int cnt=0;
    
    int dfs(vector<vector<int>>& grid, int i,int j,int zero){
        if(i<0|| j<0|| i>=grid.size()|| j>=grid[0].size() ||grid[i][j]==-1)return 0;
        
        if(grid[i][j]==2){
            return zero==0;
        }
        grid[i][j]=-1;
        zero--;
        int path= dfs(grid,i+1,j,zero)+dfs(grid,i-1,j,zero)+
            dfs(grid,i,j+1,zero)+dfs(grid,i,j-1,zero);
        grid[i][j]=0;
        return path;
    }
    int uniquePathsIII(vector<vector<int>>& grid) {
        int x,y,zero=1;
        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[0].size();j++){
                if(grid[i][j]==1)x=i,y=j;
                else if(grid[i][j]==0)zero++;
            }
        }
        return dfs(grid,x,y,zero);
    }
};
