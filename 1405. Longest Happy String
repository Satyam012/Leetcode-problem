class Solution {
public:
    string longestDiverseString(int a, int b, int c) {
        priority_queue<pair<int,char>>q;
        if(a)q.push({a,'a'});
        if(b)q.push({b,'b'});
        if(c)q.push({c,'c'});
        string ans;
        while(q.size()>1){
            pair<int,char>p1=q.top();q.pop();
            pair<int,char>p2=q.top();q.pop();
            if(p1.first>=2){
                ans+=p1.second;
                ans+=p1.second;
                p1.first-=2;
            }    
            else{
                ans+=p1.second;
                p1.first-=1;
            }
            if(p2.first>=2&&p2.first>=p1.first){
                ans+=p2.second;
                ans+=p2.second;
                p2.first-=2;
            }
            else{
                ans+=p2.second;
                p2.first-=1;
            }
            if(p1.first)q.push(p1);
            if(p2.first)q.push(p2);
        }
        if(q.empty())return ans;
        pair<int,char>p=q.top();
        if(p.first>1){
            ans+=p.second;
            ans+=p.second;
        }    
        else ans+=p.second;
        return ans;
    }
};
