/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>>vec;
    TreeNode*f(TreeNode* root,vector<int>&v){
        if(!root)return root;

        if(!root->left && !root->right){
            v.push_back(root->val);
            return NULL;
        }
        root->left=f(root->left,v);
        root->right=f(root->right,v);
        return root;
    }
    vector<vector<int>> findLeaves(TreeNode* root) {
        while(root){
            vector<int>v;
            root=f(root,v);
            vec.push_back(v);
        }
        return vec;
    }
};
